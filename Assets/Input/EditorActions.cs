//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Input/EditorActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @EditorActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @EditorActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""EditorActions"",
    ""maps"": [
        {
            ""name"": ""EditorInput"",
            ""id"": ""d41fd681-2bd0-4b3c-b63d-415d65502ab1"",
            ""actions"": [
                {
                    ""name"": ""RightStick"",
                    ""type"": ""Value"",
                    ""id"": ""b86a37ba-7640-4124-96eb-f906976360ce"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightStickClick"",
                    ""type"": ""Button"",
                    ""id"": ""d45b5051-ce06-4d2c-aa97-ed52cb582958"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStickTouched"",
                    ""type"": ""Button"",
                    ""id"": ""3be10e4f-a853-4634-b4e2-2255ad253fd9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightButtonOne"",
                    ""type"": ""Button"",
                    ""id"": ""d21f6523-6e10-4ca6-a44b-2a9465bd2897"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightButtonOneTouched"",
                    ""type"": ""Button"",
                    ""id"": ""f0fc72b4-40db-42cb-af2a-488e82e0dc5d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightButtonTwo"",
                    ""type"": ""Button"",
                    ""id"": ""65537f44-0d4e-43b5-a3ed-aaa86d98cf62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightButtonTwoTouched"",
                    ""type"": ""Button"",
                    ""id"": ""7bb30ee8-5604-4d89-9b19-36ed2718303d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""146011bc-5e94-4fb3-88df-c1f17ea03bb9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightGrip"",
                    ""type"": ""Button"",
                    ""id"": ""10050ff8-03af-451c-b9a8-549497edd401"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftStick"",
                    ""type"": ""Value"",
                    ""id"": ""db9b9333-6626-45ad-b25b-20986ac74827"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftStickClick"",
                    ""type"": ""Button"",
                    ""id"": ""08859339-da6a-472f-84d7-dbfc270c626c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftStickTouched"",
                    ""type"": ""Button"",
                    ""id"": ""218889ad-93ae-4a75-89ca-b636d48f3107"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftButtonOne"",
                    ""type"": ""Button"",
                    ""id"": ""ec665ccf-0bcc-4a0b-b8f3-f9b011ee8b4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftButtonOneTouched"",
                    ""type"": ""Button"",
                    ""id"": ""0693f51e-d41a-4343-87ad-7f6b41b80034"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftButtonTwo"",
                    ""type"": ""Button"",
                    ""id"": ""d01856d2-4717-4d2e-9271-c00db68c007e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftButtonTwoTouched"",
                    ""type"": ""Button"",
                    ""id"": ""9272c340-d4af-4754-bc18-8bed89162fd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""cdd845e9-aa9c-4c47-ad0c-c34a46e29d90"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftGrip"",
                    ""type"": ""Button"",
                    ""id"": ""b223a992-1852-467e-a713-9857ad4f868d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8255d333-5683-4943-a58a-ccb207ff1dce"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightButtonOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""140350dd-413f-4108-8e68-1bdf2df85280"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea169b15-7039-414b-8f49-1a342f561c9f"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightButtonTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1635d3fe-58b6-4ba9-a4e2-f4b964f6b5c8"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd77ff7a-2e1e-443f-8237-99e2b7c21e31"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a685e1d2-4ec8-4ee3-939a-02a552bf08ca"",
                    ""path"": ""<XRController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightStickClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d8b572a-75ec-4dc5-bf8e-f2d2ab18174d"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightGrip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""267191af-28be-4efa-9c14-d87e62eca205"",
                    ""path"": ""<XRController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftStickClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9af2aaf9-96a5-4365-a459-b3088649582b"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftButtonOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16615fe5-09e9-4372-8527-bb4b762cc33d"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftButtonTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""606329e6-cb2f-4721-bf77-056035f8416a"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b41080bd-1f2b-4282-b586-81199ab6165e"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftGrip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06c704e2-e723-4915-ac7f-57ff129f3bd2"",
                    ""path"": ""<XRController>{LeftHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftStickTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be870a7b-8b03-4a0f-a8a5-a4c0b27c2a5e"",
                    ""path"": ""<XRController>{RightHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightStickTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8974a02-a9c8-4309-aaba-548e46d97bd0"",
                    ""path"": ""<XRController>{RightHand}/secondaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightButtonOneTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08d8479b-ac35-4cb0-846f-7d80fda2f17c"",
                    ""path"": ""<XRController>{RightHand}/primaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""RightButtonTwoTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""545da65b-45f5-4afc-b940-2bf91450deed"",
                    ""path"": ""<XRController>{LeftHand}/secondaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftButtonOneTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d94ea5c-6752-4cd3-95e1-37c88ccfe501"",
                    ""path"": ""<XRController>{LeftHand}/primaryTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""LeftButtonTwoTouched"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""cdb50406-ade8-4e52-b9a7-a4a1bc8ca9e7"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""358eac39-5f86-4b03-b2a8-9a097ed25aa7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""24fbf95c-5b42-4e85-ade4-20dfb7f6a0de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""513ff641-11e0-442d-a805-24e2919c5696"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3aa07c38-055f-406f-b490-779a29abd7ab"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f35e4e77-7083-4dad-a0ac-861488f5b85e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4ab5446a-128e-411a-9a70-e2d73d9d06a1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""85f86526-b308-4291-a185-b0df61788da5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""320156f6-75a1-4543-b2ad-b9b23b15a0e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1eaad91e-f926-4ffa-93ac-9a51394ea4cb"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""51f7db50-eefb-4b0f-b1d4-38dd45caf456"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""809f371f-c5e2-4e7a-83a1-d867598f40dd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""14a5d6e8-4aaf-4119-a9ef-34b8c2c548bf"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9144cbe6-05e1-4687-a6d7-24f99d23dd81"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2db08d65-c5fb-421b-983f-c71163608d67"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""58748904-2ea9-4a80-8579-b500e6a76df8"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ba04515-75aa-45de-966d-393d9bbd1c14"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""712e721c-bdfb-4b23-a86c-a0d9fcfea921"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcd248ae-a788-4676-a12e-f4d81205600b"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1f04d9bc-c50b-41a1-bfcc-afb75475ec20"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fb8277d4-c5cd-4663-9dc7-ee3f0b506d90"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""e25d9774-381c-4a61-b47c-7b6b299ad9f9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""ff527021-f211-4c02-933e-5976594c46ed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e92bb26-7e3b-4ec4-b06b-3c8f8e498ddc"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82627dcc-3b13-4ba9-841d-e4b746d6553e"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4faf7dc9-b979-4210-aa8c-e808e1ef89f5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d66d5ba-88d7-48e6-b1cd-198bbfef7ace"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb9e6b34-44bf-4381-ac63-5aa15d19f677"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38c99815-14ea-4617-8627-164d27641299"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24066f69-da47-44f3-a07e-0015fb02eb2e"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c191405-5738-4d4b-a523-c6a301dbf754"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7236c0d9-6ca3-47cf-a6ee-a97f5b59ea77"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23e01e3a-f935-4948-8d8b-9bcac77714fb"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // EditorInput
        m_EditorInput = asset.FindActionMap("EditorInput", throwIfNotFound: true);
        m_EditorInput_RightStick = m_EditorInput.FindAction("RightStick", throwIfNotFound: true);
        m_EditorInput_RightStickClick = m_EditorInput.FindAction("RightStickClick", throwIfNotFound: true);
        m_EditorInput_RightStickTouched = m_EditorInput.FindAction("RightStickTouched", throwIfNotFound: true);
        m_EditorInput_RightButtonOne = m_EditorInput.FindAction("RightButtonOne", throwIfNotFound: true);
        m_EditorInput_RightButtonOneTouched = m_EditorInput.FindAction("RightButtonOneTouched", throwIfNotFound: true);
        m_EditorInput_RightButtonTwo = m_EditorInput.FindAction("RightButtonTwo", throwIfNotFound: true);
        m_EditorInput_RightButtonTwoTouched = m_EditorInput.FindAction("RightButtonTwoTouched", throwIfNotFound: true);
        m_EditorInput_RightTrigger = m_EditorInput.FindAction("RightTrigger", throwIfNotFound: true);
        m_EditorInput_RightGrip = m_EditorInput.FindAction("RightGrip", throwIfNotFound: true);
        m_EditorInput_LeftStick = m_EditorInput.FindAction("LeftStick", throwIfNotFound: true);
        m_EditorInput_LeftStickClick = m_EditorInput.FindAction("LeftStickClick", throwIfNotFound: true);
        m_EditorInput_LeftStickTouched = m_EditorInput.FindAction("LeftStickTouched", throwIfNotFound: true);
        m_EditorInput_LeftButtonOne = m_EditorInput.FindAction("LeftButtonOne", throwIfNotFound: true);
        m_EditorInput_LeftButtonOneTouched = m_EditorInput.FindAction("LeftButtonOneTouched", throwIfNotFound: true);
        m_EditorInput_LeftButtonTwo = m_EditorInput.FindAction("LeftButtonTwo", throwIfNotFound: true);
        m_EditorInput_LeftButtonTwoTouched = m_EditorInput.FindAction("LeftButtonTwoTouched", throwIfNotFound: true);
        m_EditorInput_LeftTrigger = m_EditorInput.FindAction("LeftTrigger", throwIfNotFound: true);
        m_EditorInput_LeftGrip = m_EditorInput.FindAction("LeftGrip", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // EditorInput
    private readonly InputActionMap m_EditorInput;
    private IEditorInputActions m_EditorInputActionsCallbackInterface;
    private readonly InputAction m_EditorInput_RightStick;
    private readonly InputAction m_EditorInput_RightStickClick;
    private readonly InputAction m_EditorInput_RightStickTouched;
    private readonly InputAction m_EditorInput_RightButtonOne;
    private readonly InputAction m_EditorInput_RightButtonOneTouched;
    private readonly InputAction m_EditorInput_RightButtonTwo;
    private readonly InputAction m_EditorInput_RightButtonTwoTouched;
    private readonly InputAction m_EditorInput_RightTrigger;
    private readonly InputAction m_EditorInput_RightGrip;
    private readonly InputAction m_EditorInput_LeftStick;
    private readonly InputAction m_EditorInput_LeftStickClick;
    private readonly InputAction m_EditorInput_LeftStickTouched;
    private readonly InputAction m_EditorInput_LeftButtonOne;
    private readonly InputAction m_EditorInput_LeftButtonOneTouched;
    private readonly InputAction m_EditorInput_LeftButtonTwo;
    private readonly InputAction m_EditorInput_LeftButtonTwoTouched;
    private readonly InputAction m_EditorInput_LeftTrigger;
    private readonly InputAction m_EditorInput_LeftGrip;
    public struct EditorInputActions
    {
        private @EditorActions m_Wrapper;
        public EditorInputActions(@EditorActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @RightStick => m_Wrapper.m_EditorInput_RightStick;
        public InputAction @RightStickClick => m_Wrapper.m_EditorInput_RightStickClick;
        public InputAction @RightStickTouched => m_Wrapper.m_EditorInput_RightStickTouched;
        public InputAction @RightButtonOne => m_Wrapper.m_EditorInput_RightButtonOne;
        public InputAction @RightButtonOneTouched => m_Wrapper.m_EditorInput_RightButtonOneTouched;
        public InputAction @RightButtonTwo => m_Wrapper.m_EditorInput_RightButtonTwo;
        public InputAction @RightButtonTwoTouched => m_Wrapper.m_EditorInput_RightButtonTwoTouched;
        public InputAction @RightTrigger => m_Wrapper.m_EditorInput_RightTrigger;
        public InputAction @RightGrip => m_Wrapper.m_EditorInput_RightGrip;
        public InputAction @LeftStick => m_Wrapper.m_EditorInput_LeftStick;
        public InputAction @LeftStickClick => m_Wrapper.m_EditorInput_LeftStickClick;
        public InputAction @LeftStickTouched => m_Wrapper.m_EditorInput_LeftStickTouched;
        public InputAction @LeftButtonOne => m_Wrapper.m_EditorInput_LeftButtonOne;
        public InputAction @LeftButtonOneTouched => m_Wrapper.m_EditorInput_LeftButtonOneTouched;
        public InputAction @LeftButtonTwo => m_Wrapper.m_EditorInput_LeftButtonTwo;
        public InputAction @LeftButtonTwoTouched => m_Wrapper.m_EditorInput_LeftButtonTwoTouched;
        public InputAction @LeftTrigger => m_Wrapper.m_EditorInput_LeftTrigger;
        public InputAction @LeftGrip => m_Wrapper.m_EditorInput_LeftGrip;
        public InputActionMap Get() { return m_Wrapper.m_EditorInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EditorInputActions set) { return set.Get(); }
        public void SetCallbacks(IEditorInputActions instance)
        {
            if (m_Wrapper.m_EditorInputActionsCallbackInterface != null)
            {
                @RightStick.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStick;
                @RightStick.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStick;
                @RightStick.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStick;
                @RightStickClick.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStickClick;
                @RightStickClick.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStickClick;
                @RightStickClick.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStickClick;
                @RightStickTouched.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStickTouched;
                @RightStickTouched.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStickTouched;
                @RightStickTouched.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightStickTouched;
                @RightButtonOne.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonOne;
                @RightButtonOne.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonOne;
                @RightButtonOne.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonOne;
                @RightButtonOneTouched.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonOneTouched;
                @RightButtonOneTouched.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonOneTouched;
                @RightButtonOneTouched.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonOneTouched;
                @RightButtonTwo.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonTwo;
                @RightButtonTwo.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonTwo;
                @RightButtonTwo.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonTwo;
                @RightButtonTwoTouched.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonTwoTouched;
                @RightButtonTwoTouched.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonTwoTouched;
                @RightButtonTwoTouched.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightButtonTwoTouched;
                @RightTrigger.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightTrigger;
                @RightGrip.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightGrip;
                @RightGrip.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightGrip;
                @RightGrip.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnRightGrip;
                @LeftStick.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStick;
                @LeftStick.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStick;
                @LeftStick.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStick;
                @LeftStickClick.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStickClick;
                @LeftStickClick.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStickClick;
                @LeftStickClick.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStickClick;
                @LeftStickTouched.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStickTouched;
                @LeftStickTouched.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStickTouched;
                @LeftStickTouched.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftStickTouched;
                @LeftButtonOne.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonOne;
                @LeftButtonOne.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonOne;
                @LeftButtonOne.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonOne;
                @LeftButtonOneTouched.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonOneTouched;
                @LeftButtonOneTouched.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonOneTouched;
                @LeftButtonOneTouched.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonOneTouched;
                @LeftButtonTwo.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonTwo;
                @LeftButtonTwo.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonTwo;
                @LeftButtonTwo.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonTwo;
                @LeftButtonTwoTouched.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonTwoTouched;
                @LeftButtonTwoTouched.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonTwoTouched;
                @LeftButtonTwoTouched.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftButtonTwoTouched;
                @LeftTrigger.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftTrigger;
                @LeftTrigger.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftTrigger;
                @LeftGrip.started -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftGrip;
                @LeftGrip.performed -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftGrip;
                @LeftGrip.canceled -= m_Wrapper.m_EditorInputActionsCallbackInterface.OnLeftGrip;
            }
            m_Wrapper.m_EditorInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @RightStick.started += instance.OnRightStick;
                @RightStick.performed += instance.OnRightStick;
                @RightStick.canceled += instance.OnRightStick;
                @RightStickClick.started += instance.OnRightStickClick;
                @RightStickClick.performed += instance.OnRightStickClick;
                @RightStickClick.canceled += instance.OnRightStickClick;
                @RightStickTouched.started += instance.OnRightStickTouched;
                @RightStickTouched.performed += instance.OnRightStickTouched;
                @RightStickTouched.canceled += instance.OnRightStickTouched;
                @RightButtonOne.started += instance.OnRightButtonOne;
                @RightButtonOne.performed += instance.OnRightButtonOne;
                @RightButtonOne.canceled += instance.OnRightButtonOne;
                @RightButtonOneTouched.started += instance.OnRightButtonOneTouched;
                @RightButtonOneTouched.performed += instance.OnRightButtonOneTouched;
                @RightButtonOneTouched.canceled += instance.OnRightButtonOneTouched;
                @RightButtonTwo.started += instance.OnRightButtonTwo;
                @RightButtonTwo.performed += instance.OnRightButtonTwo;
                @RightButtonTwo.canceled += instance.OnRightButtonTwo;
                @RightButtonTwoTouched.started += instance.OnRightButtonTwoTouched;
                @RightButtonTwoTouched.performed += instance.OnRightButtonTwoTouched;
                @RightButtonTwoTouched.canceled += instance.OnRightButtonTwoTouched;
                @RightTrigger.started += instance.OnRightTrigger;
                @RightTrigger.performed += instance.OnRightTrigger;
                @RightTrigger.canceled += instance.OnRightTrigger;
                @RightGrip.started += instance.OnRightGrip;
                @RightGrip.performed += instance.OnRightGrip;
                @RightGrip.canceled += instance.OnRightGrip;
                @LeftStick.started += instance.OnLeftStick;
                @LeftStick.performed += instance.OnLeftStick;
                @LeftStick.canceled += instance.OnLeftStick;
                @LeftStickClick.started += instance.OnLeftStickClick;
                @LeftStickClick.performed += instance.OnLeftStickClick;
                @LeftStickClick.canceled += instance.OnLeftStickClick;
                @LeftStickTouched.started += instance.OnLeftStickTouched;
                @LeftStickTouched.performed += instance.OnLeftStickTouched;
                @LeftStickTouched.canceled += instance.OnLeftStickTouched;
                @LeftButtonOne.started += instance.OnLeftButtonOne;
                @LeftButtonOne.performed += instance.OnLeftButtonOne;
                @LeftButtonOne.canceled += instance.OnLeftButtonOne;
                @LeftButtonOneTouched.started += instance.OnLeftButtonOneTouched;
                @LeftButtonOneTouched.performed += instance.OnLeftButtonOneTouched;
                @LeftButtonOneTouched.canceled += instance.OnLeftButtonOneTouched;
                @LeftButtonTwo.started += instance.OnLeftButtonTwo;
                @LeftButtonTwo.performed += instance.OnLeftButtonTwo;
                @LeftButtonTwo.canceled += instance.OnLeftButtonTwo;
                @LeftButtonTwoTouched.started += instance.OnLeftButtonTwoTouched;
                @LeftButtonTwoTouched.performed += instance.OnLeftButtonTwoTouched;
                @LeftButtonTwoTouched.canceled += instance.OnLeftButtonTwoTouched;
                @LeftTrigger.started += instance.OnLeftTrigger;
                @LeftTrigger.performed += instance.OnLeftTrigger;
                @LeftTrigger.canceled += instance.OnLeftTrigger;
                @LeftGrip.started += instance.OnLeftGrip;
                @LeftGrip.performed += instance.OnLeftGrip;
                @LeftGrip.canceled += instance.OnLeftGrip;
            }
        }
    }
    public EditorInputActions @EditorInput => new EditorInputActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    public struct UIActions
    {
        private @EditorActions m_Wrapper;
        public UIActions(@EditorActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IEditorInputActions
    {
        void OnRightStick(InputAction.CallbackContext context);
        void OnRightStickClick(InputAction.CallbackContext context);
        void OnRightStickTouched(InputAction.CallbackContext context);
        void OnRightButtonOne(InputAction.CallbackContext context);
        void OnRightButtonOneTouched(InputAction.CallbackContext context);
        void OnRightButtonTwo(InputAction.CallbackContext context);
        void OnRightButtonTwoTouched(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
        void OnRightGrip(InputAction.CallbackContext context);
        void OnLeftStick(InputAction.CallbackContext context);
        void OnLeftStickClick(InputAction.CallbackContext context);
        void OnLeftStickTouched(InputAction.CallbackContext context);
        void OnLeftButtonOne(InputAction.CallbackContext context);
        void OnLeftButtonOneTouched(InputAction.CallbackContext context);
        void OnLeftButtonTwo(InputAction.CallbackContext context);
        void OnLeftButtonTwoTouched(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
        void OnLeftGrip(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
}
